\name{applyStrategy}
\alias{applyStrategy}
\title{apply the strategy to arbitrary market data}
\usage{
  applyStrategy(strategy, portfolios, mktdata = NULL,
    parameters = NULL, ..., debug = FALSE, symbols = NULL,
    initStrat = FALSE, updateStrat = FALSE)
}
\arguments{
  \item{strategy}{an object of type 'strategy' to add the
  indicator to}

  \item{portfolios}{a list of portfolios to apply the
  strategy to}

  \item{mktdata}{an xts object containing market data.
  depending on indicators, may need to be in OHLCV or BBO
  formats, default NULL}

  \item{parameters}{named list of parameters to be applied
  during evaluation of the strategy, default NULL}

  \item{...}{any other passthru parameters}

  \item{debug}{if TRUE, return output list}

  \item{symbols}{character vector identifying symbols to
  initialize a portfolio for, default NULL}

  \item{initStrat}{whether to use (experimental)
  initialization code, default FALSE}

  \item{updateStrat}{whether to use (experimental) wrapup
  code, default FALSE}
}
\description{
  This function is the wrapper that holds together the
  execution of a strategy.
}
\details{
  After the straetgy object has been created, it may be
  applied to any combination of symbols and parameters.

  The symbols to be utilized will be defined in one of two
  ways, either by specifying a name of a portfolio that has
  already been initialized with the \code{portfolios}
  argument, or be specifying a \code{symbols} argument in
  addition to setting \code{initStrat=TRUE}.

  \code{applyStrategy} will use the \R core function
  \code{\link{get}} to load market data for each symbol
  during stategy evaluation unless the user passes
  \code{mktdata} in the call to \code{applyStrategy}
}
\seealso{
  \code{\link{strategy}}, \code{\link{applyIndicators}},
  \code{\link{applySignals}}, \code{\link{applyRules}},
  \code{\link{initStrategy}},
}

